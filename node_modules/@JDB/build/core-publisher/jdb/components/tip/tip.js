angular.module('ionic').directive('warnTip', ['$http', '$httpParamSerializerJQLike', '$q', '$timeout', '$interval', function ($http, $httpParamSerializerJQLike, $q, $timeout, $interval) {
    return {
        restrict: 'E',
        scope: {},
        template: '<div class="warn-tip" id="j-warn-tip" ng-if="hasTip">' +
        '<div class="warn-tip-icon warn-tip-icon-notice"></div>' +
        '<div class="warn-tip-text"><div class="warn-tip-scroll" ng-bind-html="content"></div></div>' +
        '<div class="warn-tip-icon warn-tip-icon-right" ng-if="hasLink" ng-click="jump()"></div>' +
        '</div>',
        link: function (scope, element, attrs) {
            // 当前模块url
            var moduleurl = attrs['moduleurl'];
            // 小黄条信息缓存时间，默认5分钟
            var cache = +(attrs['cache'] || (5 * 60 * 1000));
            if (!moduleurl) {
                console.error('必须填写当前模块链接，如：jdbclient://basic/faq');
                return false;
            }
            getData().then(function (bars) {
                if (bars && bars.length) {
                    for (var i = 0; i < bars.length; i++) {
                        var item = bars[i];
                        if (item.moduleUrl.trim() === moduleurl) {
                            scope.hasTip = true;
                            element.next().addClass('warn-tip-top');
                            scope.content = item.content;
                            if (item.skipUrl) {
                                scope.hasLink = true;
                                scope.jump = function () {
                                    if (window.HybridOpenUrl && angular.isFunction(HybridOpenUrl.hybridOpenUrl)) {
                                        HybridOpenUrl.hybridOpenUrl(item.skipUrl);
                                    } else {
                                        location.href = item.skipUrl;
                                    }
                                };
                            }

                            /**
                             * @desc 是否需要滚动 warn-tip-nolink
                             */
                            $timeout(function () {
                                var el = element[0].querySelector('.warn-tip-text');
                                var scrollEl = el.querySelector('.warn-tip-scroll');
                                var wrapW = el.clientWidth;
                                var innerW = scrollEl.clientWidth;
                                var left = 0;
                                if (!scope.hasLink) {
                                    angular.element(el).addClass('warn-tip-nolink');
                                }
                                if (innerW > wrapW) {
                                    scope.content += '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + scope.content;
                                    $interval(function () {
                                        left -= 0.5;
                                        scrollEl.style.left = left + 'px';
                                        if (left + innerW + 29 <= 0) {
                                            left = 0;
                                        }
                                    }, 30);
                                }
                            });
                            break;
                        }
                    }
                }
            });

            /**
             * @desc 获取小黄条数据
             */
            function getData() {
                var getApi = function () {
                    return getCommonParams().then(function (commonParams) {
                        return $http.post('{{getYellowBarsApi}}', $httpParamSerializerJQLike(commonParams), {
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'
                            }
                        }).then(function (res) {
                            res = res.data;
                            if (res.data && res.data.bars) {
                                localStorage.setItem('jdbWarnTip', JSON.stringify({
                                    expires: Date.now(),
                                    bars: res.data.bars
                                }));
                                return res.data.bars;
                            }
                            return null;
                        });
                    });
                };
                /**
                 * @desc 从localstorage拿数据
                 */
                var tipData = null;
                var deferred = null;
                var storeData = localStorage.getItem('jdbWarnTip');
                if (storeData) {
                    try {
                        tipData = JSON.parse(storeData);
                        /**
                         * @desc 判断缓存是否过期，5分钟过期
                         */
                        if (Date.now() - tipData.expires > cache) {
                            return getApi();
                        }
                        deferred = $q.defer();
                        deferred.resolve(tipData.bars);
                        return deferred.promise;
                    } catch (err) {
                        return getApi();
                    }
                }
                return getApi();
            }

            /**
             * @desc 获取通用参数
             */
            function getCommonParams() {
                var deferred = $q.defer();
                CommonParams.commonParams(function (nativeData) {
                    deferred.resolve(nativeData);
                }, function () {
                    deferred.reject(null);
                });
                return deferred.promise;
            }
        }
    };
}]);