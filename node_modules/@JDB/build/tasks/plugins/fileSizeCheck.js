var through = require('through2');
var gutil = require('gulp-util');
var fs = require('fs');
var PluginError = gutil.PluginError;
var ba = require('../../util/build-argv');

// 常量
const PLUGIN_NAME = 'gulp-fileSize';

// 插件级别的函数（处理文件）
function fileSizeCheck(fileSize, fn) {
    if (!fileSize) {
        throw new PluginError(PLUGIN_NAME, 'require a max fileSize value');
    }

    // 创建一个 stream 通道，以让每个文件通过
    var stream = through.obj(function (file, enc, cb) {
        if (file.isStream()) {
            this.emit('error', new PluginError(PLUGIN_NAME, 'Streams are not supported!'));
            return cb();
        }

        if (file.isBuffer()) {
            if (fs.statSync(file.path).size > fileSize) {
                console.log(('ERROR:' + file.path + ' 图片过大, 图片大小不得超过' + (fileSize / 1024) + 'kb').red);
                if (ba.isProd) {
                    process.exit(1);
                }
            };
        }
        // 确保文件进入下一个 gulp 插件
        this.push(file);

        // 告诉 stream 引擎，我们已经处理完了这个文件
        cb();
    });

    // 返回文件 stream
    return stream;
};

// 导出插件主函数
module.exports = fileSizeCheck;
