var gulp = require('gulp');
var config = require('../config').markup;
var browserSync = require('browser-sync');
var insertLines = require('gulp-insert-lines');
var gulpIf = require('gulp-if');
var ba = require('../util/build-argv');
var contains = require('gulp-contains');

gulp.task('markup', function () {
    return gulp.src(config.src)
        // insert mock code
        .pipe(gulpIf(ba.isHybridMock, insertLines({
            'before': /<\/head>/i,
            'lineBefore': '<script type="text/javascript" src="../hybrid-mock/index.js"></script>'
        })))
        // 检查是否引用了旧公共库
        .pipe(contains({
            search: [/<script[\w\W]*lib\/[\w\W]*.js[\w\W]*<\/script>/,
                /<script[\w\W]*common\/[\w\W]*.css[\w\W]*<\/script>/,
                /<script[\w\W]*cordova\/[\w\W]*.js[\w\W]*<\/script>/,
                /<link[\w\W]*lib\/[\w\W]*.js[\w\W]*<\/link>/,
                /<link[\w\W]*common\/[\w\W]*.css[\w\W]*<\/link>/
            ],
            onFound: function (string, file) {
                console.log(file.path + '中引用了原公共库common、lib、cordova中的文件。旧公共库已合并到core，请使用\n' +
                    '<link rel="stylesheet" href="../core/core.css"></link>\n'.green +
                    '<script src="../core/core.js"></script>\n'.green +
                    '引入新共有库');
                process.exit(1);
            }
        }))
        .pipe(gulp.dest(config.dest))
        .pipe(browserSync.reload({
            stream: true
        }));
});
